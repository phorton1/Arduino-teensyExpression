(export (version D)
  (design
    (source C:\src\Arduino\teensyExpression\docs\kicad\rotary_board\rotary_board.sch)
    (date "7/29/2023 8:56:50 PM")
    (tool "Eeschema (5.1.6)-1")
    (sheet (number 1) (name /) (tstamps /)
      (title_block
        (title)
        (company)
        (rev)
        (date)
        (source rotary_board.sch)
        (comment (number 1) (value ""))
        (comment (number 2) (value ""))
        (comment (number 3) (value ""))
        (comment (number 4) (value "")))))
  (components
    (comp (ref SW1)
      (value Rotary_Encoder_Switch)
      (footprint 0_my_footprints:myRotaryEncoder)
      (datasheet ~)
      (libsource (lib Device) (part Rotary_Encoder_Switch) (description "Rotary encoder, dual channel, incremental quadrate outputs, with switch"))
      (sheetpath (names /) (tstamps /))
      (tstamp 64C5B1C3))
    (comp (ref SW3)
      (value Rotary_Encoder_Switch)
      (footprint 0_my_footprints:myRotaryEncoder)
      (datasheet ~)
      (libsource (lib Device) (part Rotary_Encoder_Switch) (description "Rotary encoder, dual channel, incremental quadrate outputs, with switch"))
      (sheetpath (names /) (tstamps /))
      (tstamp 64C5CF2D))
    (comp (ref SW2)
      (value Rotary_Encoder_Switch)
      (footprint 0_my_footprints:myRotaryEncoder)
      (datasheet ~)
      (libsource (lib Device) (part Rotary_Encoder_Switch) (description "Rotary encoder, dual channel, incremental quadrate outputs, with switch"))
      (sheetpath (names /) (tstamps /))
      (tstamp 64C5D992))
    (comp (ref SW4)
      (value Rotary_Encoder_Switch)
      (footprint 0_my_footprints:myRotaryEncoder)
      (datasheet ~)
      (libsource (lib Device) (part Rotary_Encoder_Switch) (description "Rotary encoder, dual channel, incremental quadrate outputs, with switch"))
      (sheetpath (names /) (tstamps /))
      (tstamp 64C5E81E))
    (comp (ref J2)
      (value ROTARY34)
      (footprint 0_my_footprints:my5Pin)
      (datasheet ~)
      (libsource (lib Connector_Generic) (part Conn_01x05) (description "Generic connector, single row, 01x05, script generated (kicad-library-utils/schlib/autogen/connector/)"))
      (sheetpath (names /) (tstamps /))
      (tstamp 64C68167))
    (comp (ref J1)
      (value ROTARY12)
      (footprint 0_my_footprints:my5Pin)
      (datasheet ~)
      (libsource (lib Connector_Generic) (part Conn_01x05) (description "Generic connector, single row, 01x05, script generated (kicad-library-utils/schlib/autogen/connector/)"))
      (sheetpath (names /) (tstamps /))
      (tstamp 64C679BC)))
  (libparts
    (libpart (lib Connector_Generic) (part Conn_01x05)
      (description "Generic connector, single row, 01x05, script generated (kicad-library-utils/schlib/autogen/connector/)")
      (docs ~)
      (footprints
        (fp Connector*:*_1x??_*))
      (fields
        (field (name Reference) J)
        (field (name Value) Conn_01x05))
      (pins
        (pin (num 1) (name Pin_1) (type passive))
        (pin (num 2) (name Pin_2) (type passive))
        (pin (num 3) (name Pin_3) (type passive))
        (pin (num 4) (name Pin_4) (type passive))
        (pin (num 5) (name Pin_5) (type passive))))
    (libpart (lib Device) (part Rotary_Encoder_Switch)
      (description "Rotary encoder, dual channel, incremental quadrate outputs, with switch")
      (docs ~)
      (footprints
        (fp RotaryEncoder*Switch*))
      (fields
        (field (name Reference) SW)
        (field (name Value) Rotary_Encoder_Switch))
      (pins
        (pin (num A) (name A) (type passive))
        (pin (num B) (name B) (type passive))
        (pin (num C) (name C) (type passive))
        (pin (num S1) (name S1) (type passive))
        (pin (num S2) (name S2) (type passive)))))
  (libraries
    (library (logical Connector_Generic)
      (uri "C:\\Program Files\\KiCad\\share\\kicad\\library/Connector_Generic.lib"))
    (library (logical Device)
      (uri "C:\\Program Files\\KiCad\\share\\kicad\\library/Device.lib")))
  (nets
    (net (code 1) (name GND)
      (node (ref SW1) (pin S1))
      (node (ref SW1) (pin S2))
      (node (ref SW3) (pin S1))
      (node (ref SW4) (pin S2))
      (node (ref SW2) (pin S1))
      (node (ref SW2) (pin S2))
      (node (ref SW4) (pin S1))
      (node (ref SW3) (pin S2))
      (node (ref J1) (pin 5)))
    (net (code 2) (name ROT2A)
      (node (ref J1) (pin 4))
      (node (ref SW2) (pin A)))
    (net (code 3) (name ROT1B)
      (node (ref SW1) (pin B))
      (node (ref J1) (pin 2)))
    (net (code 4) (name +3V3)
      (node (ref SW1) (pin C))
      (node (ref SW3) (pin C))
      (node (ref SW2) (pin C))
      (node (ref J2) (pin 5))
      (node (ref SW4) (pin C)))
    (net (code 5) (name ROT1A)
      (node (ref SW1) (pin A))
      (node (ref J1) (pin 1)))
    (net (code 6) (name ROT2B)
      (node (ref J1) (pin 3))
      (node (ref SW2) (pin B)))
    (net (code 7) (name ROT4A)
      (node (ref SW4) (pin A))
      (node (ref J2) (pin 4)))
    (net (code 8) (name ROT4B)
      (node (ref SW4) (pin B))
      (node (ref J2) (pin 3)))
    (net (code 9) (name ROT3B)
      (node (ref SW3) (pin B))
      (node (ref J2) (pin 2)))
    (net (code 10) (name ROT3A)
      (node (ref J2) (pin 1))
      (node (ref SW3) (pin A)))))