

#if 0


#define CURVE_COMMAND_SELECT_NEXT_CURVE     1
#define CURVE_COMMAND_SELECT_NEXT_POINT     2
#define CURVE_COMMAND_MOVE_UP               3
#define CURVE_COMMAND_MOVE_DOWN             4
#define CURVE_COMMAND_MOVE_LEFT             5
#define CURVE_COMMAND_MOVE_RIGHT            6
#define CURVE_COMMAND_INC_PARAM             7


edit_point_t curves[NUM_CURVES] = {
    { "linear",     2, {
        {"min",     1,  0,   0,   0},
        {"max",     1,  127, 127, 1},
        {"",        0,  0,   0,   0},
        {"",        0,  0,   0,   0}}},
    { "asympt",     3, {
        {"min",     1,  0,   0,   0},
        {"mid",     0,  64,  64,  0},
        {"max",     1,  127, 127, 0},
        {"",        0,  0,   0,   0}}},
    { "scurve",     4, {
        {"min",     1,  0,   0,   0},
        {"left",    0,  43,  43,  0},
        {"right",   0,  86,   86,   0},
        {"max",     1,  127, 127, 0}}}
};


edit_point_t cur_curve =
    { "linear",     2, {
        {"min",     1,  0,   0,   0},
        {"max",     1,  127, 127, 1},
        {"",        0,  0,   0,   0},
        {"",        0,  0,   0,   0}}};


bool curve_command_can(int i)
{
    if (i == CURVE_COMMAND_SELECT_NEXT_CURVE)
        return true;
    if (i == CURVE_COMMAND_SELECT_NEXT_POINT)
        return curve_num != -1;
    if ((curve_num != -1) && (cur_point != -1))
    {
        // min & max can only move up and down

        edit_point_t *cp = &cur_curve.points[cur_point];
        if (cp->vert_only && (
            (i == CURVE_COMMAND_MOVE_LEFT) ||
            (i == CURVE_COMMAND_MOVE_RIGHT)))
            return false;

        // points can never move to the right of, or above points to the right

        if (cur_point < cur_curve.num_points - 1)
        {
            if ((i == CURVE_COMMAND_MOVE_RIGHT) &&
                (cp->x + 1 >= cur_curve.points[cur_point+1].x))
                return false;
            if ((i == CURVE_COMMAND_MOVE_UP) &&
                (cp->y + 1 >= cur_curve.points[cur_point+1].y))
                return false;
       }

       // or to the left of or below points to their left

        if (cur_point)
        {
            if ((i == CURVE_COMMAND_MOVE_LEFT) &&
                (cp->x - 1 <= cur_curve.points[cur_point-1].x))
                return false;
            if ((i == CURVE_COMMAND_MOVE_DOWN) &&
                (cp->y - 1 <= cur_curve.points[cur_point-1].y))
                return false;
       }

       // they cant move out of the box

       if (i == CURVE_COMMAND_MOVE_LEFT && cp->x <= 0)
            return false;
       if (i == CURVE_COMMAND_MOVE_RIGHT && cp->x >= 127)
            return false;
       if (i == CURVE_COMMAND_MOVE_DOWN && cp->y <= 0)
            return false;
       if (i == CURVE_COMMAND_MOVE_UP && cp->y >= 127)
            return false;

       return true;
    }
    return false;
}


void curve_command(int command)
{
    display(0,"curve_command(%d)",command);
    if (command == CURVE_COMMAND_SELECT_NEXT_CURVE)
    {
        curve_num++;
        if (curve_num >= NUM_CURVES)
            curve_num = 0;

        memcpy(&cur_curve,&curves[curve_num],sizeof(curve_data_t));
        cur_point = cur_curve.num_points-1;
    }
    if (command == CURVE_COMMAND_SELECT_NEXT_POINT)
    {
        cur_point++;
        if (cur_point >= cur_curve.num_points)
            cur_point = 0;
    }

    if (command == CURVE_COMMAND_MOVE_UP)
    {
         int y = cur_curve.points[cur_point].y + 1;
         if (y > 127) y = 127;
         cur_curve.points[cur_point].y = y;
         redraw_curve = 1;
    }
    if (command == CURVE_COMMAND_MOVE_DOWN)
    {
         int y = cur_curve.points[cur_point].y - 1;
         if (y < 0) y = 0;
         cur_curve.points[cur_point].y = y;
         redraw_curve = 1;
    }
    if (command == CURVE_COMMAND_MOVE_RIGHT)
    {
         int x = cur_curve.points[cur_point].x + 1;
         if (x > 127) x = 127;
         cur_curve.points[cur_point].x = x;
         redraw_curve = 1;
    }
    if (command == CURVE_COMMAND_MOVE_LEFT)
    {
         int x = cur_curve.points[cur_point].x - 1;
         if (x < 0) x = 0;
         cur_curve.points[cur_point].x = x;
         redraw_curve = 1;
    }
    if (command == CURVE_COMMAND_INC_PARAM)
    {
         int param = cur_curve.points[cur_point].param + 1;
         if (param > 127) param = 0;
         cur_curve.points[cur_point].param = param;
         redraw_curve = 1;
    }

    draw_curve(false);

}


#endif
